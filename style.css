:root {
  --primary-color: #2f374d;
  --secondary-color: #344458;
  --theme: rgb(255, 255, 255);
  --glow: 255, 255, 255;
  --form: rgba(47, 55, 77, 0.6);
}

* {
  font-family: "Outfit", sans-serif;
}

.lightmode {
  --primary-color: #e2e2e2;
  --secondary-color: #a3a3ad;
  --theme: rgb(47, 55, 77);
  --glow: 47, 55, 77;
  --form: #e2e2e2c3;
}

h1,
h2,
label {
  text-shadow: 1px 1px 8px rgba(var(--glow), 0.3); /*only use var like this , if ur using rgb values*/
}

body {
  margin: 0;
  overflow: hidden;
  background-color: var(--secondary-color);
  position: relative;
  height: 100vh;
  width: 100vw;
}

.lightmode #id1 {
  transform: translate(
    600px,
    -200px
  ); /*this value changes wrt to the initial value where it was placed*/
}
.lightmode #id2 {
  transform: translate(-300px, 300px);
}
#theme-btn {
  width: 40px;
  height: 40px;
  border: 1px solid var(--theme);
  outline: none;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 20px;
  right: 20px;
  background-color: transparent;
  z-index: 100;
}
#theme-btn svg {
  fill: var(--theme);
  display: block;
}
#theme-btn svg:last-child {
  display: none;
}
.lightmode #theme-btn svg:first-child {
  display: none;
}
.lightmode #theme-btn svg:last-child {
  display: block;
}

.outer {
  height: 600px;
  width: 600px;
  border-radius: 50%;
  background-color: var(--primary-color);
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  transition: background-color 0.5s;
}
.inner {
  height: 450px;
  width: 450px;
  border-radius: 50%;
  background-color: var(--secondary-color);
  transition: background-color 0.5s;
}

#id1 {
  transform: translate(-300px, -300px); /*hows the y value workin */
  transition: transform 1.2s ease;
}

#id2 {
  transform: translate(600px, 300px);
  transition: transform 1.2s ease;
}

#content {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  width: 85%;
  height: 80%;
}

#header {
  z-index: 200;
  color: var(--theme);
  align-self: flex-start;
}
#form {
  z-index: 100;
  background-color: var(--form);
  width: 40%;
  height: 90%;
  border-radius: 15px;
  padding: 20px;
}

form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  color: var(--theme);
}

form input {
  outline: none;
  border: none;
  border-radius: 50px;
  height: 35px;
  margin: 10px;
  margin-top: 0px;
  background-color: var(--theme);
  opacity: 0.6;
  padding: 0px 15px;
  color: var(--primary-color);
  font-size: 16px;
}

form input::placeholder {
  color: var(--primary-color);
  opacity: 0.8;
}
form button {
  outline: none;
  border: none;
  border-radius: 50px;
  height: 35px;
  margin-bottom: 10px;
  color: var(--theme);
  border: 1px solid var(--theme);
  font-weight: 600;
  background-color: var(--secondary-color);
}

#quiz-container {
  position: absolute;
  padding: 10px 20px;
  top: 50%;
  left: 50%;
  border-radius: 15px;
  background-color: var(--form);
  width: 50%;
  height: 70%;
  transform: translate(-50%, -50%);
  color: var(--theme);
  display: none;
  flex-direction: column;
  justify-content: space-evenly;
}

#quiz-container h2,
h1 {
  padding: 0px;
  margin: 0px;
}
#quiz-container button {
  outline: none;
  border: none;
  background-color: var(--theme);
  color: var(--primary-color);
  font-size: 15px;
  font-weight: 600;
  border-radius: 5px;
  height: 35px;
  width: 70%;
}
#quiz-container #submit-quiz,
#end {
  height: 30px;
  width: 30%;
  border-radius: 50px;
}
#quiz-container button.selected {
  background-color: #0080ff95;
  color: white;
  border: 1px solid #0080ff;
}

#result-container {
  border: none;
  position: absolute;
  border-radius: 20px;
  background-color: var(--form);
  color: var(--theme);
  width: 50%;
  height: 70%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: none;
  justify-content: center;
  align-items: center;
}

@keyframes float {
  from {
    transform: translateY(0px);
  }
  to {
    transform: translateY(-40px);
  }
}

button:hover {
  transform: scaleZ(1.5);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
  transition: transform 0.5s ease-in-out, box-shadow 0.5s ease-in-out;
}
#float-wrapper {
  /*added this class because if i added transform to both animation and transition then they were overriding each other but adding a div takes that problem away*/

  animation: float 4s ease-in-out infinite alternate;
}

@keyframes fadeOut {
  0% {
    transform: translate(-50%, -50%) scaleZ(1);
    opacity: 1;
  }
  50% {
    transform: translate(-50%, -50%) scaleZ(0.85);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scaleZ(0.7);
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translate(-50%, -50%) scaleZ(0.7); /*use composite transform functions so that it doesnt override the previous transform function */
  }
  50% {
    transform: translate(-50%, -50%) scaleZ(0.85);
  }
  100% {
    transform: translate(-50%, -50%) scaleZ(1);
    opacity: 1;
  }
}

.fade-in {
  animation: fadeIn 0.5s ease forwards;
}

.fade-out {
  animation: fadeOut 0.5s ease forwards;
}
